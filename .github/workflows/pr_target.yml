name: PR TARGET CI

on: 
  pull_request_target: 
    branches: [ main ]

env:
  MY_SECRET: ${{ secrets.MY_SECRET }}
  GITHUB_PAT: ${{ secrets.GH_PAT }}
  PR_ID: ${{github.event.number}}
  
jobs:
  preflight-job:
    name: Preflight Step
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get all .github chnages
        id: changed-files-yaml
        uses: tj-actions/changed-files@v40
        with:
          files_yaml: |
            github:
              - .github/**
              
      - name: fail step if test file(s) change
        # NOTE: Ensure all outputs are prefixed by the same key used above e.g. `test_(...)` | `doc_(...)` | `src_(...)` when trying to access the `any_changed` output.
        if: steps.changed-files-yaml.outputs.github_any_changed == 'true'  
        #uses: actions/github-script@v3
        #with:
        #  script: |
        #    echo "One or more test file(s) has changed."
        #    echo "List all the files that have changed: ${{ steps.changed-files-yaml.outputs.github_all_changed_files }}"
        #    core.setFailed('.github files changed')
        run: |
          echo "One or more test file(s) has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-yaml.outputs.github_all_changed_files }}"
          exit 1


      - name: SUCCESS step if test file(s) does not change
        # NOTE: Ensure all outputs are prefixed by the same key used above e.g. `test_(...)` | `doc_(...)` | `src_(...)` when trying to access the `any_changed` output.
        if: steps.changed-files-yaml.outputs.github_any_changed == 'false'  
        run: |
          echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

                
  prt_build_and_upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out PR code
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request_target' }}
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: '0'
          # This is to get the PR code instead of the repo code
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Building ... 
        run: |
          mkdir ./bin
          touch ./bin/mybin.exe
          echo "${{github.event.pull_request.title}}" > ./bin/PR_TITLE.txt
          echo "$PR_ID" > ./bin/PR_ID.txt
          ls -lR 
        #env:
        #  PR_TITLE: ${{github.event.pull_request.title}}
 
      - name: Archive building artifacts
        uses: actions/upload-artifact@v3
        with:
          name: archive-bin
          path: |
            bin


